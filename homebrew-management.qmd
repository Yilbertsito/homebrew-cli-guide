# Gesti√≥n de Homebrew

Homebrew es m√°s que un simple instalador de paquetes - es un ecosistema completo que requiere mantenimiento y gesti√≥n adecuada. Esta secci√≥n cubre las mejores pr√°cticas para mantener tu instalaci√≥n de Homebrew funcionando de manera √≥ptima.

## Comandos esenciales de Homebrew

### Instalaci√≥n y desinstalaci√≥n

```bash
# Instalar un paquete
brew install nombre-del-paquete

# Instalar una versi√≥n espec√≠fica
brew install nombre-del-paquete@version

# Desinstalar un paquete
brew uninstall nombre-del-paquete

# Desinstalar completamente incluyendo dependencias no utilizadas
brew uninstall --zap nombre-del-paquete
```

### B√∫squeda y exploraci√≥n

```bash
# Buscar paquetes disponibles
brew search t√©rmino-de-b√∫squeda

# Informaci√≥n detallada de un paquete
brew info nombre-del-paquete

# Listar todos los paquetes instalados
brew list

# Listar solo las f√≥rmulas principales (sin dependencias)
brew leaves
```

### Mantenimiento y limpieza

```bash
# Actualizar Homebrew y todos los paquetes
brew update && brew upgrade

# Actualizar solo Homebrew (sin actualizar paquetes)
brew update

# Actualizar un paquete espec√≠fico
brew upgrade nombre-del-paquete

# Limpiar cach√©s y archivos temporales
brew cleanup

# Limpiar archivos espec√≠ficos de un paquete
brew cleanup nombre-del-paquete

# Ver qu√© se va a limpiar sin ejecutar
brew cleanup --dry-run
```

### Diagn√≥stico y resoluci√≥n de problemas

```bash
# Verificar la instalaci√≥n de Homebrew
brew doctor

# Verificar la integridad de los paquetes instalados
brew audit --installed

# Reinstalar un paquete problem√°tico
brew reinstall nombre-del-paquete

# Ver dependencias de un paquete
brew deps nombre-del-paquete

# Ver qu√© paquetes dependen de uno espec√≠fico
brew uses nombre-del-paquete --installed
```

## Gesti√≥n de f√≥rmulas obsoletas

Con el tiempo, algunas f√≥rmulas pueden volverse obsoletas o ser reemplazadas por alternativas mejores. Es importante mantener el sistema actualizado.

### Identificar paquetes obsoletos

```bash
# Ver f√≥rmulas obsoletas instaladas
brew list --versions | grep -E "(deprecated|obsolete)"

# Verificar el estado de un paquete espec√≠fico
brew info nombre-del-paquete | grep -E "(deprecated|obsolete|unmaintained)"
```

### Proceso de migraci√≥n recomendado

1. **Identificar la alternativa recomendada**
2. **Instalar la nueva herramienta**
3. **Probar la funcionalidad**
4. **Migrar configuraciones si es necesario**
5. **Desinstalar la versi√≥n obsoleta**
6. **Limpiar archivos residuales**

Ejemplo pr√°ctico:

```bash
# 1. Verificar estado actual
brew info herramienta-obsoleta

# 2. Instalar alternativa
brew install nueva-herramienta

# 3. Probar funcionalidad
nueva-herramienta --version

# 4. Desinstalar obsoleta
brew uninstall herramienta-obsoleta

# 5. Limpiar sistema
brew cleanup
```

## Configuraci√≥n avanzada

### Taps (repositorios adicionales)

```bash
# Agregar un tap
brew tap usuario/repositorio

# Listar taps instalados
brew tap

# Eliminar un tap
brew untap usuario/repositorio
```

### Servicios (daemons)

```bash
# Listar servicios disponibles
brew services list

# Iniciar un servicio
brew services start nombre-del-servicio

# Parar un servicio
brew services stop nombre-del-servicio

# Reiniciar un servicio
brew services restart nombre-del-servicio

# Limpiar servicios rotos
brew services cleanup
```

### Variables de entorno importantes

```bash
# Directorio de instalaci√≥n de Homebrew
echo $HOMEBREW_PREFIX

# Directorio de cach√©s
echo $HOMEBREW_CACHE

# Configurar directorio de cach√© personalizado
export HOMEBREW_CACHE=/path/to/custom/cache
```

## Mejores pr√°cticas

### Mantenimiento regular

```bash
#!/bin/bash
# Script de mantenimiento semanal de Homebrew

echo "üîÑ Actualizando Homebrew..."
brew update

echo "üì¶ Actualizando paquetes instalados..."
brew upgrade

echo "üßπ Limpiando archivos temporales..."
brew cleanup

echo "ü©∫ Verificando integridad del sistema..."
brew doctor

echo "‚úÖ Mantenimiento completado"
```

### Backup de paquetes instalados

```bash
# Crear lista de paquetes instalados
brew leaves > ~/homebrew-packages.txt

# Restaurar desde backup
cat ~/homebrew-packages.txt | xargs brew install
```

### Configuraci√≥n de aliases √∫tiles

```bash
# Agregar a ~/.zshrc o ~/.bashrc
alias brewup='brew update && brew upgrade && brew cleanup'
alias brewdoc='brew doctor'
alias brewinfo='brew info'
alias brewsearch='brew search'
alias brewlist='brew leaves'
```

## Troubleshooting com√∫n

### Problemas de permisos

```bash
# Reparar permisos
sudo chown -R $(whoami) $(brew --prefix)/*

# Reinstalar Homebrew si es necesario
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
```

### Problemas de dependencias

```bash
# Forzar reinstalaci√≥n de dependencias
brew reinstall $(brew deps nombre-del-paquete)

# Verificar dependencias rotas
brew missing
```

### Limpieza profunda

```bash
# Eliminar todas las versiones antiguas
brew cleanup --prune=all

# Eliminar cach√© completo
rm -rf $(brew --cache)

# Reconstruir base de datos
brew update-reset
```

## Monitoreo y estad√≠sticas

### Informaci√≥n del sistema

```bash
# Tama√±o total de la instalaci√≥n
du -sh $(brew --prefix)

# N√∫mero de paquetes instalados
brew list | wc -l

# Espacio usado por cach√©s
du -sh $(brew --cache)

# √öltimas actualizaciones
brew log --oneline -10
```

### An√°lisis de uso

```bash
# Paquetes m√°s grandes instalados
brew list --formula | xargs -n1 -I{} sh -c 'echo $(brew --prefix {}): $(du -sh $(brew --prefix {}) 2>/dev/null | cut -f1)' | sort -hr | head -10

# Dependencias m√°s utilizadas
brew uses --installed --recursive | sort | uniq -c | sort -nr | head -10
```

---

::: {.callout-important}
### Recordatorio importante

Siempre realiza un backup de tus configuraciones importantes antes de realizar cambios mayores en tu instalaci√≥n de Homebrew. El comando `brew doctor` es tu mejor amigo para diagnosticar problemas.
:::
